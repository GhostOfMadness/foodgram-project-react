name: Foodgram Workflow

on:
  push:
    branches:
      - main

jobs:
  backend_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'
      - name: Install dependecies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./backend/requirements/requirements.lint.txt
      - name: Run linters
        run: python -m flake8 backend/

  build_backend_and_push_to_docker_hub:
    name: Push backend Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: 
      - backend_lint
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend
          tags: |
            type=sha
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ steps.meta.outputs.tags }}, ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest
          labels: ${{ steps.meta.outputs.labels }}

  frontend_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: |
          cd frontend/
          npm ci
      - name: Test frontend
        run: |
          cd frontend/
          npm run test

  build_frontend_and_push_to_docker_hub:
    name: Push frontend Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: frontend_tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend
          tags: |
            type=sha
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ steps.meta.outputs.tags }}, ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest
          labels: ${{ steps.meta.outputs.labels }}

  build_gateway_and_push_to_docker_hub:
    name: Push gateway Docker image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway
          tags: |
            type=sha
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./infra/
          push: true
          tags: ${{ steps.meta.outputs.tags }}, ${{ secrets.DOCKER_USERNAME }}/foodgram_gateway:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_backend_and_push_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Copy redoc files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docs/openapi-schema.yml,docs/redoc.html"
          target: "foodgram/docs"
      - name: Copy docker-compose.yml via ssh
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.production.yml"
          target: "foodgram"
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd foodgram
            sudo docker compose -f docker-compose.production.yml pull   
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
            sudo docker system prune -f

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Send message in Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Деплой foodgram успешно выполнен!